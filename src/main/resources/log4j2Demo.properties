#print log4j configuration if debug or trace
status=warn

# Configure root logger for logging info logs in classes which are in package
rootLogger.level = warn
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.stdout.ref = STDOUT

appenders = console, rolling

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = STDOUT
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %-5p - %m%n 

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName = ${sys:MSCILOG}/dataloader/${sys:USER}/log/dataloader.log
appender.rolling.filePattern = ${sys:MSCILOG}/dataloader/${sys:USER}/log/dataloader_%d{yyyyMMdd}_%d{HHmmss}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{dd MMM HH:mm:ss} %-5p - %t - %F:%L - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 50MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 15

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.dataloader.name = com.mydemoproject
logger.dataloader.level = info
logger.dataloader.appenderRef.rolling.ref = fileLogger
logger.dataloader.appenderRef.console.ref = STDOUT
logger.dataloader.additivity = false

logger.apacheLog.name=org.apache
logger.apacheLog.level=error
logger.apacheLog.appenderRef.rolling.ref = fileLogger
logger.apacheLog.appenderRef.console.ref = STDOUT
logger.apacheLog.additivity = false

logger.springLog.name=org.springframework
logger.springLog.level=warn
logger.springLog.appenderRef.rolling.ref = fileLogger
logger.springLog.appenderRef.console.ref = STDOUT
logger.springLog.additivity = false

